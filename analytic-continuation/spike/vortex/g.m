%%newton method:
function b = g(x)

alpha = 1.; beta = 1.;

R = 7;

N = length(x)/2;
r = linspace(0,R,N+2);
r = r(2:N+1);
h = R/(N+1);

b = zeros(length(x),1);

b(1) = r(1)/(h^2)*(x(2)-2.*x(1)) - 1./(2.*h)*x(2) + beta*r(1)*(1.-x(1))*x(N+1)^2;
b(N) = r(N)/(h^2)*(1.-2.*x(N)+x(N-1)) + 1./(2.*h)*(1.-x(N-1)) + beta*r(N)*(1.-x(N))*x(2*N)^2;
b(N+1) = r(1)^2/(h^2)*(x(N+2) - 2.*x(N+1))+r(1)/(2.*h)*x(N+2) - (x(1)-1.)^2*x(N+1) - alpha*r(1)*x(N+1)*(x(N+1)^2-1.);
b(2*N) = r(N)^2/(h^2)*(1.-2.*x(2*N)+x(2*N-1))+r(N)/(h^2)*(1.-x(2*N-1)) - (x(N)-1.)^2*x(2*N) - alpha*r(N)*x(2*N)*(x(2*N)^2-1.);

for i = 2:N-1
    b(i) = r(i)/(h^2)*(x(i+1)-2.*x(i)+x(i-1)) - 1./(2.*h)*(x(i+1)-x(i-1)) + beta*r(i)*(1.-x(i))*x(i+N)^2;
end

for i = N+2:2*N-1
    b(i) = r(i-N)^2/(h^2)*(x(i+1)-2.*x(i)+x(i-1)) + r(i-N)/(2.*h)*(x(i+1)-x(i-1)) - (x(i-N)-1.)^2*x(i) - alpha*r(i-N)*x(i)*(x(i)^2-1.);
end






% b(1) = r(1)*r(1)/(h*h)*(-2*x(1)+x(2)) ...
%        +r(1)/(2.*h)*x(2) ...
%        -alpha*r(1)*r(1)*(x(1)*x(1)-1.)*x(1) ...
%        -x(1)*(x(N+1)-1.)*(x(N+1)-1.);
% for i=2:N-1
%     b(i) = r(i)*r(i)/(h*h)*(x(i-1)-2.*x(i)+x(i+1)) ...
%            +r(i)/(2.*h)*(x(i+1)-x(i-1)) ...
%            -alpha*r(i)*r(i)*(x(i)*x(i)-1.)*x(i) ...
%            -x(i)*(x(N+i)-1.)*(x(N+i)-1.);
% end
% b(N) = r(N)*r(N)/(h*h)*(x(N-1)-2.*x(N)+1.) ...
%        +r(N)/(2.*h)*(1.-x(N-1)) ...
%        -alpha*r(N)*r(N)*(x(N)*x(N)-1.)*x(N) ...
%        -x(N)*(x(2*N)-1.)*(x(2*N)-1.);
% 
%        
%        
% b(N+1) = r(1)/(h*h)*(x(N+2)-2.*x(N+1)) ...
%          -1./(2.*h)*x(N+2) ...
%          +beta*x(1)*x(1)*(1.-x(N+1))*r(1);
% for i=2:N-1
%     b(N+i) = r(i)/(h*h)*(x(N+i-1)-2.*x(N+i)+x(N+i+1.)) ...
%            -1./(2.*h)*(x(N+i+1)-x(N+i-1)) ...
%            +beta*x(i)*x(i)*(1.-x(N+i))*r(i);
% end
% b(2*N) = r(N)/(h*h)*(x(2*N-1)-2.*x(N)+1.) ...
%          -1./(2.*h)*(1.-x(2*N-1)) ...
%          +beta*x(N)*x(N)*(1.-x(2*N))*r(i);
